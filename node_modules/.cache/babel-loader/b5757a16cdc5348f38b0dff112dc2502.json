{"ast":null,"code":"var _jsxFileName = \"/Users/nhly1204/Documents/LEARNJS/ReactJs/PhotoApp/src/features/Photo/components/PhotoForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Label } from \"reactstrap\";\nimport NotFound from \"../../../../components/NotFound\";\nimport RandomPhoto from \"../../../../components/RandomPhoto\";\nimport { PHOTO_CATEGORY_OPTIONS } from \"../../../../constants/global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PhotoForm(_ref) {\n  _s();\n\n  let {\n    infoPhoto\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm();\n  const editedPhoto = useSelector(state => state.photo.find(x => x.id === +photoId));\n  const [imageUrl, setImageUrl] = useState(isAddMode ? \"https://picsum.photos/id/237/200/300\" : editedPhoto.photo);\n  const {\n    photoId\n  } = useParams();\n  const isAddMode = !photoId;\n  const initalValue = {// title:\"\",\n    // category:\"\",\n    // photo:imageUrl\n  };\n\n  const onHandleSubmit = data => {\n    data.photo = imageUrl;\n    const random = Math.trunc(Math.random() * 2000);\n    data.id = random;\n    infoPhoto(data);\n  };\n\n  const getRandomImageUrl = () => {\n    const randomId = Math.trunc(Math.random() * 2000);\n    setImageUrl(`https://picsum.photos/id/${randomId}/200/300`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"titleId\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"title\"),\n        value: isAddMode ? initalValue.title : editedPhoto.title,\n        placeholder: \"Eg: Wow nature ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"categoryId\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: isAddMode ? initalValue.category : editedPhoto.category,\n        id: \"categoryId\",\n        name: \"categoryId\",\n        ...register(\"category\"),\n        children: PHOTO_CATEGORY_OPTIONS.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.label\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"categoryId\",\n        children: \"Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: getRandomImageUrl,\n        children: \"Random a Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"photo\",\n        ...register(\"photo\"),\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(RandomPhoto, { ...register(\"id\"),\n            imagesUrl: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        children: \"Add to album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoForm, \"5Rq5MS24WhnQKElCpr2Hs6tfU3g=\", false, function () {\n  return [useForm, useSelector, useParams];\n});\n\n_c = PhotoForm;\nexport default PhotoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoForm\");","map":{"version":3,"sources":["/Users/nhly1204/Documents/LEARNJS/ReactJs/PhotoApp/src/features/Photo/components/PhotoForm/index.jsx"],"names":["useState","Controller","useForm","useSelector","useParams","Button","Label","NotFound","RandomPhoto","PHOTO_CATEGORY_OPTIONS","PhotoForm","infoPhoto","register","handleSubmit","control","editedPhoto","state","photo","find","x","id","photoId","imageUrl","setImageUrl","isAddMode","initalValue","onHandleSubmit","data","random","Math","trunc","getRandomImageUrl","randomId","title","category","map","item","label","field"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Label } from \"reactstrap\";\nimport NotFound from \"../../../../components/NotFound\";\nimport RandomPhoto from \"../../../../components/RandomPhoto\";\nimport { PHOTO_CATEGORY_OPTIONS } from \"../../../../constants/global\";\n\nfunction PhotoForm({ infoPhoto }) {\n  const { register, handleSubmit, control } = useForm();\n  const editedPhoto = useSelector((state) =>\n    state.photo.find((x) => x.id === +photoId)\n  );\n  const [imageUrl, setImageUrl] = useState(\n    isAddMode ? \n   ( \"https://picsum.photos/id/237/200/300\"): editedPhoto.photo\n  );\n  const { photoId } = useParams();\n  const isAddMode = !photoId;\n  const initalValue={\n    // title:\"\",\n    // category:\"\",\n    // photo:imageUrl\n  }\n  \n\n  \n  const onHandleSubmit = (data) => {\n    data.photo = imageUrl;\n    const random = Math.trunc(Math.random() * 2000);\n    data.id = random;\n    infoPhoto(data);\n  };\n\n  const getRandomImageUrl = () => {\n    const randomId = Math.trunc(Math.random() * 2000);\n    setImageUrl(`https://picsum.photos/id/${randomId}/200/300`);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onHandleSubmit)}>\n      <div>\n        <Label for=\"titleId\">Title</Label>\n        <input\n          {...register(\"title\")}\n          value= { isAddMode? initalValue.title: editedPhoto.title}\n          placeholder=\"Eg: Wow nature ... \"\n        />\n      </div>\n\n      <div>\n        <Label for=\"categoryId\">Category</Label>\n        <select value={isAddMode? initalValue.category: editedPhoto.category} id=\"categoryId\" name=\"categoryId\" {...register(\"category\")}>\n          {PHOTO_CATEGORY_OPTIONS.map((item) => (\n            <option key={item.id}>{item.label}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <Label for=\"categoryId\">Photo</Label>\n        <button type=\"button\" onClick={getRandomImageUrl}>\n          Random a Photo\n        </button>\n      </div>\n\n      <div>\n        <Controller\n          control={control}\n          name=\"photo\"\n          {...register(\"photo\")}\n          render={({ field }) => (\n            <RandomPhoto {...register(\"id\")}\n             imagesUrl={imageUrl}\n             \n            ></RandomPhoto>\n          )}\n        ></Controller>\n      </div>\n      <div>\n        <Button type=\"submit\" color=\"primary\">\n          Add to album\n        </Button>\n      </div>\n    </form>\n  );\n}\nexport default PhotoForm;\n"]},"metadata":{},"sourceType":"module"}