{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialPhoto = JSON.parse(localStorage.getItem('infoPhoto'));\nconst photos = createSlice({\n  name: \"photos\",\n  initialState: initialPhoto,\n  reducers: {\n    addPhoto: (state, action) => {\n      const newPhoto = action.payload;\n      state.push(newPhoto);\n    },\n    removePhoto: (state, action) => {\n      const removeItem = action.payload;\n      state = state.filter(item => item.id !== removeItem);\n      return state;\n    },\n    editPhoto: (state, action) => {\n      const editPhoto = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = photos;\nexport const {\n  addPhoto,\n  removePhoto\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/nhly1204/Documents/LEARNJS/ReactJs/PhotoApp/src/features/Photo/photoSlice.js"],"names":["createSlice","initialPhoto","JSON","parse","localStorage","getItem","photos","name","initialState","reducers","addPhoto","state","action","newPhoto","payload","push","removePhoto","removeItem","filter","item","id","editPhoto","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnB;AACA,MAAMC,MAAM,GAAGN,WAAW,CAAC;AACzBO,EAAAA,IAAI,EAAE,QADmB;AAEzBC,EAAAA,YAAY,EAAGP,YAFU;AAGzBQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAxB;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAWF,QAAX;AAED,KALO;AAMRG,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMK,UAAU,GAAGL,MAAM,CAACE,OAA1B;AACAH,MAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,UAAnC,CAAR;AACA,aAAON,KAAP;AACD,KAVO;AAWRU,IAAAA,SAAS,EAAC,CAACV,KAAD,EAAOC,MAAP,KAAgB;AACxB,YAAMS,SAAS,GAACT,MAAM,CAACE,OAAvB;AAED;AAdO;AAHe,CAAD,CAA1B;AAoBA,MAAM;AAAEQ,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,MAA7B;AACA,OAAO,MAAM;AAAEI,EAAAA,QAAF;AAAYM,EAAAA;AAAZ,IAA2BO,OAAjC;AACP,eAAeD,OAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialPhoto=JSON.parse(localStorage.getItem('infoPhoto'));\nconst photos = createSlice({\n  name: \"photos\",\n  initialState:  initialPhoto,\n  reducers: {\n    addPhoto: (state, action) => {\n      const newPhoto = action.payload;\n      state.push(newPhoto);\n      \n    },\n    removePhoto: (state, action) => {\n      const removeItem = action.payload\n      state = state.filter((item) => item.id !== removeItem);\n      return state\n    },\n    editPhoto:(state,action)=>{\n      const editPhoto=action.payload\n      \n    }\n  },\n});\nconst { reducer, actions } = photos;\nexport const { addPhoto ,removePhoto} = actions;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}